将Gradle项目安装到Maven Repo

我们可以使用gradle install命令来构建和安装我们的
应用程序JAR/WAR文件到我们的本地maven存储库。

1. 我们没有在build.gradle文件中指定任何maven插件，所以不能执行gradle install命令.
所以要添加maven插件到build.gradle文件中: apply plugin: 'maven'

2. 添加GroupId和我们的JAR/WAR文件version
    group = "com.journaldev"
    version = "1.0"

3. 添加build.gradle文件根元素

4. 如果我们在这里没有指定version元素，那么将使用war文件版本声明，如下所示：
war {
    baseName = 'SpringMVCExample'
    version = '1.0.0-BUILD-SNAPSHOT'
}

5. 现在我们的gradle install命令将复制应用程序jar/war文件到maven存储库。

我们的完整的build.gradle文件:

<-- start -->
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "war"
apply plugin: 'maven'
 
sourceCompatibility = 1.7

group = "com.journaldev"
version = "1.0"

war {
    baseName = 'SpringMVCExample'
    version = '1.0.0-BUILD-SNAPSHOT'
}
 
repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework:spring-context:4.0.0.RELEASE")
    compile("org.springframework:spring-webmvc:4.0.0.RELEASE")
    compile("org.aspectj:aspectjrt:1.7.4")
	compile("javax.inject:javax.inject:1")
    compile("javax.servlet:servlet-api:2.5")
    compile("javax.servlet:jstl:1.2")
    compile("javax.servlet.jsp:jsp-api:2.1")	
    compile("org.slf4j:slf4j-api:1.7.5")
    compile("org.slf4j:jcl-over-slf4j:1.7.5")
    compile("org.slf4j:slf4j-log4j12:1.7.5")
    compile("log4j:log4j:1.2.15")

    testCompile("junit:junit:4.7") 
}
<-- end -->

然后执行: gradle install, 观察我们的Local Maven Repository(.m2\repository\com.journaldev\)